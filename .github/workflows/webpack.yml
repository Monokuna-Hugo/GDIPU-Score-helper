name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'

jobs:
  # 代码质量检查
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npx eslint src/ --ext .js,.jsx,.ts,.tsx
    
    - name: Check code formatting with Prettier
      run: npx prettier --check src/
    
    - name: TypeScript type checking
      run: npx tsc --noEmit

  # 构建测试
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: |
          build/
          zip/
        retention-days: 7

  # 发布到GitHub Releases
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Get version from package.json
      id: package-version
      uses: martinbeentjes/npm-get-version-action@v1.3.1
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.package-version.outputs.current-version }}
        name: Release v${{ steps.package-version.outputs.current-version }}
        body: |
          ## GDIPU Score Helper v${{ steps.package-version.outputs.current-version }}
          
          ### 新功能
          - 自动构建的Chrome扩展包
          
          ### 安装说明
          1. 下载对应的zip文件
          2. 解压到本地目录
          3. 在Chrome中加载扩展
        draft: false
        prerelease: false
        files: |
          zip/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
